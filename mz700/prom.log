KCPSM6 Assembler log file for program 'C:\xilinx_sample\mz700\prom.psm'.
Generated by KCPSM6 version v2.00
Ken Chapman - Xilinx Ltd - 30th April 2012

Assembly datestamp: 26 Oct 2016
Assembly timestamp: 22:02:38

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels


Last occupied address: 3FF hex
Nominal program memory size: 1K    address(9:0)


Assembly listing

 Addr Code            Instruction

 000                  ;
 000                  ; Printer and Tape control firmware for PicoBlaze
 000                  ; for MZ-700 on FPGA
 000                  ;
 000                  ; Nibbles Lab. 2005
 000                  ;
 000                  ; Input ports
 000                  CONSTANT RX, 00
 000                  CONSTANT STROBE, 01
 000                  CONSTANT PDATA, 02
 000                  CONSTANT TXSTAT, 03
 000                  CONSTANT PSTAT, 04
 000                  CONSTANT BUFR, 05
 000                  CONSTANT RBLK, 06
 000                  CONSTANT WBLK, 07
 000                  ; Output ports
 000                  CONSTANT TX, 00
 000                  CONSTANT BUSY, 01
 000                  CONSTANT PWM, 02
 000                  ;  CONSTANT PWM0, 02
 000                  ;  CONSTANT PWM1, 03
 000                  CONSTANT BUFRES, 04
 000                  CONSTANT BUFW, 05
 000                  CONSTANT CTRL, 06
 000                  CONSTANT CTRH, 07
 000                  CONSTANT LED, 08
 000                  ; XMODEM protocol
 000                  CONSTANT SOH, 01
 000                  CONSTANT EOT, 04
 000                  CONSTANT ACK, 06
 000                  CONSTANT NAK, 15
 000                  ;
 000                  ; Register list
 000                  ;  s0 work
 000                  ;  s1 sub work
 000                  ;  s2 parameter
 000                  ;  s3 counter (low)
 000                  ;  s4 counter (high)
 000                  ;  s5 file size (low)
 000                  ;  s6 file size (high)
 000                  ;  s7 sum (low)
 000                  ;  s8 sum (high)
 000                  ;  s9 block counter
 000                  ;  sA recieve data
 000                  ;  sB waiting ACK mode
 000                  ;  sC
 000                  ;  sD
 000                  ;  sE
 000                  ;  sF pen color
 000                  ;
 000  01100    START: LOAD s1, 00           ; Initialize
 001  2D101           OUTPUT s1, 01[BUSY]
 002  2D106           OUTPUT s1, 06[CTRL]
 003  2D107           OUTPUT s1, 07[CTRH]
 004  01F03           LOAD sF, 03
 005  0121D           LOAD s2, 1D
 006  200B5           CALL 0B5[PCODE]       ; set terminal's color to default
 007  28001           ENABLE INTERRUPT
 008                  ;
 008  200A8     LOOP: CALL 0A8[PRINT]
 009  09004           INPUT s0, 04[PSTAT]   ; PLAY button check (off->on)
 00A  14006           SL0 s0
 00B  3E008           JUMP NC, 008[LOOP]
 00C  20015           CALL 015[RTAPE]
 00D  01000           LOAD s0, 00
 00E  2D006           OUTPUT s0, 06[CTRL]
 00F  2D007           OUTPUT s0, 07[CTRH]
 010                  ;
 010  200A8    LOOP2: CALL 0A8[PRINT]
 011  09004           INPUT s0, 04[PSTAT]   ; PLAY button check (on->off)
 012  14006           SL0 s0
 013  3E008           JUMP NC, 008[LOOP]
 014  22010           JUMP 010[LOOP2]
 015                  ;
 015  2D004    RTAPE: OUTPUT s0, 04[BUFRES]
 016  01900           LOAD s9, 00
 017  01B00           LOAD sB, 00
 018  01C00           LOAD sC, 00
 019  01D00           LOAD sD, 00
 01A  2DD08           OUTPUT sD, 08[LED]
 01B  01215           LOAD s2, 15[NAK]      ; request to start XMODEM transfer
 01C  200D7           CALL 0D7[TXOUT]
 01D  2006E           CALL 06E[CHKBTN]      ; PLAY button check (off)
 01E  35000           RETURN NZ
 01F                  ;
 01F  20071   RTAPE1: CALL 071[Z11000]      ; 0 * 22000
 020  2006E           CALL 06E[CHKBTN]
 021  35000           RETURN NZ             ; button off
 022  20071           CALL 071[Z11000]
 023  2006E           CALL 06E[CHKBTN]
 024  35000           RETURN NZ             ; button off
 025                  ;
 025  2007B           CALL 07B[BIT120]      ; 1 * 40
 026  2006E           CALL 06E[CHKBTN]
 027  35000           RETURN NZ             ; button off
 028  2007B           CALL 07B[BIT120]
 029  2006E           CALL 06E[CHKBTN]
 02A  35000           RETURN NZ             ; button off
 02B  2007E           CALL 07E[BIT020]      ; 1 * 40
 02C  2006E           CALL 06E[CHKBTN]
 02D  35000           RETURN NZ             ; button off
 02E  2007E           CALL 07E[BIT020]
 02F                  ;
 02F  01E80           LOAD sE, 80           ; 1 * 1
 030  2009E           CALL 09E[PLSOUT]
 031  2006E           CALL 06E[CHKBTN]
 032  35000           RETURN NZ             ; button off
 033                  ;
 033  01700           LOAD s7, 00           ; sum clear
 034  01800           LOAD s8, 00
 035  0147F           LOAD s4, 7F           ; Header size
 036  01E80   RTAPE2: LOAD sE, 80           ; start bit
 037  2009E           CALL 09E[PLSOUT]
 038  09E05           INPUT sE, 05[BUFR]    ; Header
 039  2008D           CALL 08D[TCHK]
 03A  1D46D           COMPARE s4, 6D
 03B  3603F           JUMP NZ, 03F[RTAPE3]
 03C  005E0           LOAD s5, sE           ; size low
 03D  2D506           OUTPUT s5, 06[CTRL]
 03E  22043           JUMP 043[RTAPE4]
 03F  1D46C   RTAPE3: COMPARE s4, 6C
 040  36043           JUMP NZ, 043[RTAPE4]
 041  006E0           LOAD s6, sE           ; size high
 042  2D607           OUTPUT s6, 07[CTRH]
 043  01307   RTAPE4: LOAD s3, 07
 044  20099           CALL 099[PLSLOOP]
 045  10710           ADD s7, s1
 046  13800           ADDCY s8, 00
 047  2006E           CALL 06E[CHKBTN]
 048  35000           RETURN NZ             ; button off
 049  19401           SUB s4, 01
 04A  3E036           JUMP NC, 036[RTAPE2]
 04B                  ;
 04B  20081           CALL 081[TSUM]
 04C  2006E           CALL 06E[CHKBTN]
 04D  35000           RETURN NZ             ; button off
 04E                  ;
 04E  20071           CALL 071[Z11000]      ; 0 * 11000
 04F  2006E           CALL 06E[CHKBTN]
 050  35000           RETURN NZ             ; button off
 051                  ;
 051  2007B           CALL 07B[BIT120]      ; 1 * 20
 052  2006E           CALL 06E[CHKBTN]
 053  35000           RETURN NZ             ; button off
 054  2007E           CALL 07E[BIT020]      ; 0 * 20
 055                  ;
 055  01E80           LOAD sE, 80           ; 1 * 1
 056  2009E           CALL 09E[PLSOUT]
 057  2006E           CALL 06E[CHKBTN]
 058  35000           RETURN NZ             ; button off
 059                  ;
 059  01700           LOAD s7, 00           ; sum clear
 05A  01800           LOAD s8, 00
 05B  01E80   RTAPE6: LOAD sE, 80           ; start bit
 05C  2009E           CALL 09E[PLSOUT]
 05D  09E05           INPUT sE, 05[BUFR]    ; Data
 05E  2008D           CALL 08D[TCHK]
 05F  01307           LOAD s3, 07
 060  20099           CALL 099[PLSLOOP]
 061  10710           ADD s7, s1            ; add sum
 062  13800           ADDCY s8, 00
 063  19501           SUB s5, 01
 064  1B600           SUBCY s6, 00
 065  2D506           OUTPUT s5, 06[CTRL]
 066  2D607           OUTPUT s6, 07[CTRH]
 067  2006E           CALL 06E[CHKBTN]
 068  35000           RETURN NZ             ; button off
 069  00050           LOAD s0, s5
 06A  04060           OR s0, s6
 06B  3605B           JUMP NZ, 05B[RTAPE6]
 06C                  ;
 06C  20081           CALL 081[TSUM]
 06D  2201F           JUMP 01F[RTAPE1]
 06E                  ;
 06E  09004   CHKBTN: INPUT s0, 04[PSTAT]   ; PLAY button check
 06F  0D040           TEST s0, 40
 070  25000           RETURN 
 071                  ;
 071  01E00   Z11000: LOAD sE, 00           ; 0 * 11000
 072  01428           LOAD s4, 28
 073  013FF       Z0: LOAD s3, FF
 074  20099           CALL 099[PLSLOOP]
 075  2006E           CALL 06E[CHKBTN]
 076  35000           RETURN NZ             ; button off
 077  19401           SUB s4, 01
 078  36073           JUMP NZ, 073[Z0]
 079  013F7           LOAD s3, F7
 07A  22099           JUMP 099[PLSLOOP]
 07B                  ;
 07B  01EFF   BIT120: LOAD sE, FF           ; 1 * 20
 07C  01313           LOAD s3, 13
 07D  22099           JUMP 099[PLSLOOP]
 07E                  ;
 07E  01E00   BIT020: LOAD sE, 00           ; 0 * 20
 07F  01313           LOAD s3, 13
 080  22099           JUMP 099[PLSLOOP]
 081                  ;
 081  01E80     TSUM: LOAD sE, 80           ; start bit
 082  2009E           CALL 09E[PLSOUT]
 083  01307           LOAD s3, 07
 084  00E80           LOAD sE, s8           ; high
 085  20099           CALL 099[PLSLOOP]
 086  01E80           LOAD sE, 80           ; start bit
 087  2009E           CALL 09E[PLSOUT]
 088  01307           LOAD s3, 07
 089  00E70           LOAD sE, s7           ; low
 08A  20099           CALL 099[PLSLOOP]
 08B  01E80           LOAD sE, 80           ; 1 * 1
 08C  2209E           JUMP 09E[PLSOUT]
 08D                  ;
 08D  1DBFF     TCHK: COMPARE sB, FF        ; waiting ACK?
 08E  35000           RETURN NZ
 08F  09006           INPUT s0, 06[RBLK]    ; can I recieve?
 090  09107           INPUT s1, 07[WBLK]
 091                  ;  ADD  s1, 01
 091                  ;  AND  s1, 0F
 091  1C010           COMPARE s0, s1
 092  31000           RETURN Z
 093  01B00           LOAD sB, 00
 094  2F202           STORE s2, 02
 095  01206           LOAD s2, 06[ACK]
 096  200D7           CALL 0D7[TXOUT]
 097  0B202           FETCH s2, 02
 098  25000           RETURN 
 099                  ;
 099  01100  PLSLOOP: LOAD s1, 00
 09A  2009E  PLSLOP1: CALL 09E[PLSOUT]
 09B  19301           SUB s3, 01
 09C  3E09A           JUMP NC, 09A[PLSLOP1]
 09D  25000           RETURN 
 09E                  ;
 09E  09004   PLSOUT: INPUT s0, 04[PSTAT]   ; PLAY button check
 09F  0D040           TEST s0, 40
 0A0  35000           RETURN NZ             ; button off
 0A1  1400E           SR0 s0                ; busy check
 0A2  3A09E           JUMP C, 09E[PLSOUT]
 0A3  2DE02           OUTPUT sE, 02[PWM]
 0A4  14E02           RL sE
 0A5  3D000           RETURN NC
 0A6  11101           ADD s1, 01
 0A7  25000           RETURN 
 0A8                  ;
 0A8  09001    PRINT: INPUT s0, 01[STROBE]  ; Print data set?
 0A9  1400E           SR0 s0
 0AA  3D000           RETURN NC
 0AB  09202           INPUT s2, 02[PDATA]   ; get Print data
 0AC  01001           LOAD s0, 01
 0AD  2D001           OUTPUT s0, 01[BUSY]   ; Printer is busy
 0AE  200B5           CALL 0B5[PCODE]
 0AF  09001  CHKSTB2: INPUT s0, 01[STROBE]  ; Print end?
 0B0  1400E           SR0 s0
 0B1  3A0AF           JUMP C, 0AF[CHKSTB2]
 0B2  01000           LOAD s0, 00           ; Printer is not busy
 0B3  2D001           OUTPUT s0, 01[BUSY]
 0B4  25000           RETURN 
 0B5                  ;
 0B5  1D220    PCODE: COMPARE s2, 20
 0B6  3E0D7           JUMP NC, 0D7[TXOUT]   ; force output over 0x1f
 0B7  09001           INPUT s0, 01[STROBE]
 0B8  14006           SL0 s0
 0B9  3A0D7           JUMP C, 0D7[TXOUT]    ; force output
 0BA  1D20D           COMPARE s2, 0D        ; CR
 0BB  320D7           JUMP Z, 0D7[TXOUT]
 0BC  1D21D           COMPARE s2, 1D        ; Pen change
 0BD  35000           RETURN NZ
 0BE  0121B           LOAD s2, 1B           ; ESC
 0BF  200D7           CALL 0D7[TXOUT]
 0C0  0125B           LOAD s2, 5B           ; '['
 0C1  200D7           CALL 0D7[TXOUT]
 0C2  11F01           ADD sF, 01
 0C3  03F03           AND sF, 03
 0C4  360C8           JUMP NZ, 0C8[PCODE1]
 0C5  01230           LOAD s2, 30           ; '0' (default)
 0C6  200D7           CALL 0D7[TXOUT]
 0C7  220D6           JUMP 0D6[PCODE4]
 0C8  01233   PCODE1: LOAD s2, 33           ; '3'
 0C9  200D7           CALL 0D7[TXOUT]
 0CA  1DF01           COMPARE sF, 01
 0CB  360CF           JUMP NZ, 0CF[PCODE2]
 0CC  01234           LOAD s2, 34           ; '4' (blue)
 0CD  200D7           CALL 0D7[TXOUT]
 0CE  220D6           JUMP 0D6[PCODE4]
 0CF  1DF02   PCODE2: COMPARE sF, 02
 0D0  360D4           JUMP NZ, 0D4[PCODE3]
 0D1  01232           LOAD s2, 32           ; '2' (green)
 0D2  200D7           CALL 0D7[TXOUT]
 0D3  220D6           JUMP 0D6[PCODE4]
 0D4  01231   PCODE3: LOAD s2, 31           ; '1' (red)
 0D5  200D7           CALL 0D7[TXOUT]
 0D6  0126D   PCODE4: LOAD s2, 6D           ; 'm'
 0D7                  ;  JUMP TXOUT
 0D7                  ;
 0D7  09003    TXOUT: INPUT s0, 03[TXSTAT]  ; Is Serial(TX) busy?
 0D8  1400E           SR0 s0
 0D9  3A0D7           JUMP C, 0D7[TXOUT]
 0DA  2D200           OUTPUT s2, 00[TX]     ; set Serial port
 0DB  25000           RETURN 
 0DC                  ;
 0DC  2F200     RXIN: STORE s2, 00
 0DD  2F001           STORE s0, 01
 0DE  09A00           INPUT sA, 00[RX]
 0DF  11901           ADD s9, 01
 0E0  1D901           COMPARE s9, 01        ; SOH/EOT
 0E1  360E5           JUMP NZ, 0E5[RXIN0]
 0E2  1DA04           COMPARE sA, 04[EOT]
 0E3  320F9           JUMP Z, 0F9[RXIN3]
 0E4  220FB           JUMP 0FB[RXIN9]
 0E5  1D904    RXIN0: COMPARE s9, 04        ; block num
 0E6  3E0E8           JUMP NC, 0E8[RXIN1]
 0E7  220FB           JUMP 0FB[RXIN9]
 0E8  1D984    RXIN1: COMPARE s9, 84        ; data
 0E9  3E0ED           JUMP NC, 0ED[RXIN2]
 0EA  2DA05           OUTPUT sA, 05[BUFW]
 0EB  10CA0           ADD sC, sA
 0EC  220FB           JUMP 0FB[RXIN9]
 0ED  1CAC0    RXIN2: COMPARE sA, sC
 0EE  320F1           JUMP Z, 0F1[RXIN21]
 0EF  11D01           ADD sD, 01
 0F0  2DD08           OUTPUT sD, 08[LED]
 0F1  01900   RXIN21: LOAD s9, 00
 0F2  01C00           LOAD sC, 00
 0F3  09A06           INPUT sA, 06[RBLK]
 0F4  09207           INPUT s2, 07[WBLK]
 0F5                  ;  ADD  s2, 01
 0F5                  ;  AND  s2, 0F
 0F5  1C2A0           COMPARE s2, sA
 0F6  360F9           JUMP NZ, 0F9[RXIN3]
 0F7  01BFF           LOAD sB, FF
 0F8  220FB           JUMP 0FB[RXIN9]
 0F9  01206    RXIN3: LOAD s2, 06[ACK]
 0FA  200D7           CALL 0D7[TXOUT]
 0FB  0B200    RXIN9: FETCH s2, 00
 0FC  0B001           FETCH s0, 01
 0FD  29001           RETURNI ENABLE
 0FE                  ;
 3FF                  ADDRESS 3FF
 3FF                  ;
 3FF  220DC           JUMP 0DC[RXIN]



List of PSM files that have been assembled

C:\xilinx_sample\mz700\prom.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   22'd         
 timestamp_minutes 02'd         
 timestamp_seconds 38'd         
 datestamp_year    16'd         
 datestamp_month   10'd         
 datestamp_day     26'd         
 RX                00           prom.psm
 STROBE            01           prom.psm
 PDATA             02           prom.psm
 TXSTAT            03           prom.psm
 PSTAT             04           prom.psm
 BUFR              05           prom.psm
 RBLK              06           prom.psm
 WBLK              07           prom.psm
 TX                00           prom.psm
 BUSY              01           prom.psm
 PWM               02           prom.psm
 BUFRES            04           prom.psm
 BUFW              05           prom.psm
 CTRL              06           prom.psm
 CTRH              07           prom.psm
 LED               08           prom.psm
 SOH               01           prom.psm
 EOT               04           prom.psm
 ACK               06           prom.psm
 NAK               15           prom.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.00"        
 datestamp$        "26 Oct 2016"  
 timestamp$        "22:02:38"     



List of line labels

 Label     Addr  Source PSM File

 START     000   prom.psm
 LOOP      008   prom.psm
 LOOP2     010   prom.psm
 RTAPE     015   prom.psm
 RTAPE1    01F   prom.psm
 RTAPE2    036   prom.psm
 RTAPE3    03F   prom.psm
 RTAPE4    043   prom.psm
 RTAPE6    05B   prom.psm
 CHKBTN    06E   prom.psm
 Z11000    071   prom.psm
 Z0        073   prom.psm
 BIT120    07B   prom.psm
 BIT020    07E   prom.psm
 TSUM      081   prom.psm
 TCHK      08D   prom.psm
 PLSLOOP   099   prom.psm
 PLSLOP1   09A   prom.psm
 PLSOUT    09E   prom.psm
 PRINT     0A8   prom.psm
 CHKSTB2   0AF   prom.psm
 PCODE     0B5   prom.psm
 PCODE1    0C8   prom.psm
 PCODE2    0CF   prom.psm
 PCODE3    0D4   prom.psm
 PCODE4    0D6   prom.psm
 TXOUT     0D7   prom.psm
 RXIN      0DC   prom.psm
 RXIN0     0E5   prom.psm
 RXIN1     0E8   prom.psm
 RXIN2     0ED   prom.psm
 RXIN21    0F1   prom.psm
 RXIN3     0F9   prom.psm
 RXIN9     0FB   prom.psm



End of KCPSM6 log file.
